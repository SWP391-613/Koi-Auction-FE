name: CD for Koi-Auction-FE

on:
  push:
    branches: ["main", "deployment"]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js 18.x
        uses: actions/setup-node@v4
        with:
          node-version: 18.x
      
      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 10.6.5 # Use the pnpm version you need
          run_install: false
      
      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
      
      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: Build the project
        run: pnpm run build:prod

      - name: Deploy to Production Repo
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          # Configure Git
          git config --global user.name "lcaohoanq"
          git config --global user.email "hoangclw@gmail.com"

          # Set up SSH
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          eval "$(ssh-agent -s)"
          ssh-add ~/.ssh/id_ed25519

          # Add GitHub to known hosts
          ssh-keyscan github.com >> ~/.ssh/known_hosts

          # Clone the production repository
          git clone git@github.com:lcaohoanq/Koi-Auction-Production.git production-repo

          # Remove existing dist folder in production repo (if it exists)
          rm -rf production-repo/dist

          # Copy new dist folder
          cp -r dist production-repo/

          # Commit and push changes
          cd production-repo
          git pull
          git add .
          # Check if there are changes to commit
          if git diff --staged --quiet; then
            # No changes, create an empty commit
            git commit --allow-empty -m "Trigger CD"
          else
            # Changes exist, commit them
            git commit -m "Deploy new build from ${{ github.ref_name }} branch"
          fi

          git push origin main
